name: Update AdGuard Home Rules

on:
  schedule:
    - cron: "0 18 * * *"  # 每天 UTC 时间 18:00 对应北京时间凌晨 2:00 更新规则
  push:
    branches:
      - main  # 监听 main 分支的推送事件
  workflow_dispatch:  # 支持手动触发工作流

jobs:
  update-rules:
    runs-on: ubuntu-latest

    steps:
    # 步骤 1: 检出当前仓库的代码
    - name: Checkout repository
      uses: actions/checkout@v3

    # 步骤 2: 确保脚本具有执行权限，并运行脚本生成规则文件
    - name: Run script to generate rules
      run: |
        chmod +x generate_formatted_list.sh
        ./generate_formatted_list.sh
      id: run_script  # 给此步骤一个 ID，方便后续引用

    # 步骤 3: 检查脚本执行是否成功
    - name: Check script execution status
      if: steps.run_script.outcome != 'success'
      run: |
        echo "Error: generate_formatted_list.sh script failed."
        exit 1

    # 步骤 4: 检查规则文件是否存在
    - name: Check if rules file exists
      id: check_file
      uses: andstor/file-existence-action@v2
      with:
        file: adguard_home_rules.txt

    # 步骤 5: 如果规则文件存在且有更改，则提交并推送
    - name: Commit and push changes if file exists and changed
      if: steps.check_file.outputs.files_exists == 'true' && steps.run_script.outcome == 'success'
      run: |
        git add adguard_home_rules.txt  # 仅添加规则文件
        git diff-index --quiet HEAD || {  # 如果文件有更改
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "github-actions@users.noreply.github.com"
          git commit -m "Update AdGuard Home rules"
          git push origin main
        }
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
