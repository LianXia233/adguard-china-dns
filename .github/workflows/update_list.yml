name: Update AdGuard Home Rules

on:
  schedule:
    - cron: "0 18 * * *"  # 每天 UTC 时间 18:00 对应北京时间凌晨 2:00 更新规则
  push:
    branches:
      - main  # 监听 main 分支的推送事件
  workflow_dispatch:  # 支持手动触发工作流

jobs:
  update-rules:
    runs-on: ubuntu-latest

    steps:
    # 步骤 1: 检出当前仓库的代码
    - name: Checkout repository
      uses: actions/checkout@v3

    # 步骤 2: 确保脚本具有执行权限，并运行脚本生成规则文件
    - name: Set execute permission for the script and run it
      run: |
        chmod +x generate_formatted_list.sh  # 给脚本加执行权限
        ./generate_formatted_list.sh        # 执行脚本
      continue-on-error: false  # 如果脚本失败，则停止后续步骤

    # 步骤 3: 确认文件是否被重新生成
    - name: Check if the file is generated
      run: |
        ls -l adguard_home_rules.txt  # 检查文件是否存在

    # 步骤 4: 强制添加所有更改并提交推送
    - name: Commit and push updated rules if file changed
      run: |
        git add -A  # 强制添加所有更改（包括文件的删除和新增）
        git status  # 确认文件是否被正确跟踪
        git diff --exit-code || (
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "github-actions@users.noreply.github.com"
          git commit -m "Update AdGuard Home rules"  # 提交更改
          git push origin main  # 将更改推送到 main 分支
        )
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # 使用 GitHub 自动提供的 token 进行推送
